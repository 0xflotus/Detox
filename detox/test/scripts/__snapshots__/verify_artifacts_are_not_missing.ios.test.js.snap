// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`artifacts health check should have all the iOS artifacts in ./artifacts folder 1`] = `
Array [
  ".",
  "1.startup.log",
  "2.startup.log",
  "3.startup.log",
  "4.startup.log",
  "5.startup.log",
  "6.startup.log",
  "7.startup.log",
  "8.startup.log",
  "9.startup.log",
  "10.startup.log",
  "11.startup.log",
  "12.startup.log",
  "13.startup.log",
  "14.startup.log",
  "15.startup.log",
  "16.startup.log",
  "17.startup.log",
  "18.startup.log",
  "19.startup.log",
  "20.startup.log",
  "./✓ :ios: User Notifications Background calendar notification",
  "./✓ :ios: User Notifications Background calendar notification/afterEach.png",
  "./✓ :ios: User Notifications Background calendar notification/beforeEach.png",
  "./✓ :ios: User Notifications Background calendar notification/test.log",
  "./✓ :ios: User Notifications Background push notification",
  "./✓ :ios: User Notifications Background push notification/afterEach.png",
  "./✓ :ios: User Notifications Background push notification/beforeEach.png",
  "./✓ :ios: User Notifications Background push notification/test.log",
  "./✓ :ios: User Notifications Foreground calendar notifications",
  "./✓ :ios: User Notifications Foreground calendar notifications/afterEach.png",
  "./✓ :ios: User Notifications Foreground calendar notifications/beforeEach.png",
  "./✓ :ios: User Notifications Foreground calendar notifications/test.log",
  "./✓ :ios: User Notifications Foreground push notifications",
  "./✓ :ios: User Notifications Foreground push notifications/afterEach.png",
  "./✓ :ios: User Notifications Foreground push notifications/beforeEach.png",
  "./✓ :ios: User Notifications Foreground push notifications/test.log",
  "./✓ :ios: User Notifications Init from push notification",
  "./✓ :ios: User Notifications Init from push notification/afterEach.png",
  "./✓ :ios: User Notifications Init from push notification/beforeEach.png",
  "./✓ :ios: User Notifications Init from push notification/test.log",
  "./✓ Actions :ios: should long press with duration on an element",
  "./✓ Actions :ios: should long press with duration on an element/afterEach.png",
  "./✓ Actions :ios: should long press with duration on an element/beforeEach.png",
  "./✓ Actions :ios: should long press with duration on an element/test.log",
  "./✓ Actions should clear text in an element",
  "./✓ Actions should clear text in an element/afterEach.png",
  "./✓ Actions should clear text in an element/beforeEach.png",
  "./✓ Actions should clear text in an element/test.log",
  "./✓ Actions should long press on an element",
  "./✓ Actions should long press on an element/afterEach.png",
  "./✓ Actions should long press on an element/beforeEach.png",
  "./✓ Actions should long press on an element/test.log",
  "./✓ Actions should multi tap on an element",
  "./✓ Actions should multi tap on an element/afterEach.png",
  "./✓ Actions should multi tap on an element/beforeEach.png",
  "./✓ Actions should multi tap on an element/test.log",
  "./✓ Actions should not wait for long timeout (>1.5s)",
  "./✓ Actions should not wait for long timeout (>1.5s)/afterEach.png",
  "./✓ Actions should not wait for long timeout (>1.5s)/beforeEach.png",
  "./✓ Actions should not wait for long timeout (>1.5s)/test.log",
  "./✓ Actions should replace text in an element",
  "./✓ Actions should replace text in an element/afterEach.png",
  "./✓ Actions should replace text in an element/beforeEach.png",
  "./✓ Actions should replace text in an element/test.log",
  "./✓ Actions should scroll for a large amount in direction",
  "./✓ Actions should scroll for a large amount in direction/afterEach.png",
  "./✓ Actions should scroll for a large amount in direction/beforeEach.png",
  "./✓ Actions should scroll for a large amount in direction/test.log",
  "./✓ Actions should scroll for a small amount in direction",
  "./✓ Actions should scroll for a small amount in direction/afterEach.png",
  "./✓ Actions should scroll for a small amount in direction/beforeEach.png",
  "./✓ Actions should scroll for a small amount in direction/test.log",
  "./✓ Actions should scroll to edge",
  "./✓ Actions should scroll to edge/afterEach.png",
  "./✓ Actions should scroll to edge/beforeEach.png",
  "./✓ Actions should scroll to edge/test.log",
  "./✓ Actions should tap on an element",
  "./✓ Actions should tap on an element/afterEach.png",
  "./✓ Actions should tap on an element/beforeEach.png",
  "./✓ Actions should tap on an element/test.log",
  "./✓ Actions should tap on an element at point",
  "./✓ Actions should tap on an element at point/afterEach.png",
  "./✓ Actions should tap on an element at point/beforeEach.png",
  "./✓ Actions should tap on an element at point/test.log",
  "./✓ Actions should type in an element",
  "./✓ Actions should type in an element/afterEach.png",
  "./✓ Actions should type in an element/beforeEach.png",
  "./✓ Actions should type in an element/test.log",
  "./✓ Animations :ios: should wait during delays shorter than 1.5s (driver: JS)",
  "./✓ Animations :ios: should wait during delays shorter than 1.5s (driver: JS)/afterEach.png",
  "./✓ Animations :ios: should wait during delays shorter than 1.5s (driver: JS)/beforeEach.png",
  "./✓ Animations :ios: should wait during delays shorter than 1.5s (driver: JS)/test.log",
  "./✓ Animations :ios: should wait during delays shorter than 1.5s (driver: Native)",
  "./✓ Animations :ios: should wait during delays shorter than 1.5s (driver: Native)/afterEach.png",
  "./✓ Animations :ios: should wait during delays shorter than 1.5s (driver: Native)/beforeEach.png",
  "./✓ Animations :ios: should wait during delays shorter than 1.5s (driver: Native)/test.log",
  "./✓ Animations should detect loops with final number of iterations (driver: JS)",
  "./✓ Animations should detect loops with final number of iterations (driver: JS)/afterEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver: JS)/beforeEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver: JS)/test.log",
  "./✓ Animations should detect loops with final number of iterations (driver: Native)",
  "./✓ Animations should detect loops with final number of iterations (driver: Native)/afterEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver: Native)/beforeEach.png",
  "./✓ Animations should detect loops with final number of iterations (driver: Native)/test.log",
  "./✓ Animations should find element (driver: JS)",
  "./✓ Animations should find element (driver: JS)/afterEach.png",
  "./✓ Animations should find element (driver: JS)/beforeEach.png",
  "./✓ Animations should find element (driver: JS)/test.log",
  "./✓ Animations should find element (driver: Native)",
  "./✓ Animations should find element (driver: Native)/afterEach.png",
  "./✓ Animations should find element (driver: Native)/beforeEach.png",
  "./✓ Animations should find element (driver: Native)/test.log",
  "./✓ Animations should not wait during delays longer than 1.5s (driver: JS)",
  "./✓ Animations should not wait during delays longer than 1.5s (driver: JS)/afterEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver: JS)/beforeEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver: JS)/test.log",
  "./✓ Animations should not wait during delays longer than 1.5s (driver: Native)",
  "./✓ Animations should not wait during delays longer than 1.5s (driver: Native)/afterEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver: Native)/beforeEach.png",
  "./✓ Animations should not wait during delays longer than 1.5s (driver: Native)/test.log",
  "./✓ Device :ios: shake() should shake screen",
  "./✓ Device :ios: shake() should shake screen/afterEach.png",
  "./✓ Device :ios: shake() should shake screen/beforeEach.png",
  "./✓ Device :ios: shake() should shake screen/test.log",
  "./✓ Device launchApp({newInstance: true}) + sendToHome() + launchApp() - should bring up previous instance",
  "./✓ Device launchApp({newInstance: true}) + sendToHome() + launchApp() - should bring up previous instance/afterEach.png",
  "./✓ Device launchApp({newInstance: true}) + sendToHome() + launchApp() - should bring up previous instance/beforeEach.png",
  "./✓ Device launchApp({newInstance: true}) + sendToHome() + launchApp() - should bring up previous instance/test.log",
  "./✓ Device relaunchApp - should tap successfully",
  "./✓ Device relaunchApp - should tap successfully/afterEach.png",
  "./✓ Device relaunchApp - should tap successfully/beforeEach.png",
  "./✓ Device relaunchApp - should tap successfully/test.log",
  "./✓ Device relaunchApp({delete: true}) - should tap successfully",
  "./✓ Device relaunchApp({delete: true}) - should tap successfully/afterEach.png",
  "./✓ Device relaunchApp({delete: true}) - should tap successfully/beforeEach.png",
  "./✓ Device relaunchApp({delete: true}) - should tap successfully/test.log",
  "./✓ Device reloadReactNative - should tap successfully",
  "./✓ Device reloadReactNative - should tap successfully/afterEach.png",
  "./✓ Device reloadReactNative - should tap successfully/beforeEach.png",
  "./✓ Device reloadReactNative - should tap successfully/test.log",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully/afterEach.png",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully/beforeEach.png",
  "./✓ Device resetContentAndSettings() + install() + relaunch() - should tap successfully/test.log",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully/afterEach.png",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully/beforeEach.png",
  "./✓ Device uninstall() + install() + relaunch() - should tap successfully/test.log",
  "./✓ Matchers :ios: should match elements by accesibility trait",
  "./✓ Matchers :ios: should match elements by accesibility trait/afterEach.png",
  "./✓ Matchers :ios: should match elements by accesibility trait/beforeEach.png",
  "./✓ Matchers :ios: should match elements by accesibility trait/test.log",
  "./✓ Matchers should match elements by (accesibility) id",
  "./✓ Matchers should match elements by (accesibility) id/afterEach.png",
  "./✓ Matchers should match elements by (accesibility) id/beforeEach.png",
  "./✓ Matchers should match elements by (accesibility) id/test.log",
  "./✓ Matchers should match elements by (accesibility) label",
  "./✓ Matchers should match elements by (accesibility) label/afterEach.png",
  "./✓ Matchers should match elements by (accesibility) label/beforeEach.png",
  "./✓ Matchers should match elements by (accesibility) label/test.log",
  "./✓ Matchers should match elements by index",
  "./✓ Matchers should match elements by index/afterEach.png",
  "./✓ Matchers should match elements by index/beforeEach.png",
  "./✓ Matchers should match elements by index/test.log",
  "./✓ Matchers should match elements by type (native class)",
  "./✓ Matchers should match elements by type (native class)/afterEach.png",
  "./✓ Matchers should match elements by type (native class)/beforeEach.png",
  "./✓ Matchers should match elements by type (native class)/test.log",
  "./✓ Matchers should match elements by using two matchers together with and",
  "./✓ Matchers should match elements by using two matchers together with and/afterEach.png",
  "./✓ Matchers should match elements by using two matchers together with and/beforeEach.png",
  "./✓ Matchers should match elements by using two matchers together with and/test.log",
  "./✓ Matchers should match elements with ancenstor (parent)",
  "./✓ Matchers should match elements with ancenstor (parent)/afterEach.png",
  "./✓ Matchers should match elements with ancenstor (parent)/beforeEach.png",
  "./✓ Matchers should match elements with ancenstor (parent)/test.log",
  "./✓ Matchers should match elements with descendant (child)",
  "./✓ Matchers should match elements with descendant (child)/afterEach.png",
  "./✓ Matchers should match elements with descendant (child)/beforeEach.png",
  "./✓ Matchers should match elements with descendant (child)/test.log",
  "./✓ Network Synchronization disableSynchronization() should disable sync",
  "./✓ Network Synchronization disableSynchronization() should disable sync/afterEach.png",
  "./✓ Network Synchronization disableSynchronization() should disable sync/beforeEach.png",
  "./✓ Network Synchronization disableSynchronization() should disable sync/test.log",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint/afterEach.png",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint/beforeEach.png",
  "./✓ Network Synchronization setURLBlacklist() should disable synchronization for given endpoint/test.log",
  "./✓ Network Synchronization Sync with long network requests - 3000ms",
  "./✓ Network Synchronization Sync with long network requests - 3000ms/afterEach.png",
  "./✓ Network Synchronization Sync with long network requests - 3000ms/beforeEach.png",
  "./✓ Network Synchronization Sync with long network requests - 3000ms/test.log",
  "./✓ Network Synchronization Sync with short network requests - 100ms",
  "./✓ Network Synchronization Sync with short network requests - 100ms/afterEach.png",
  "./✓ Network Synchronization Sync with short network requests - 100ms/beforeEach.png",
  "./✓ Network Synchronization Sync with short network requests - 100ms/test.log",
  "./✓ StressTests should handle consecutive taps",
  "./✓ StressTests should handle consecutive taps/afterEach.png",
  "./✓ StressTests should handle consecutive taps/beforeEach.png",
  "./✓ StressTests should handle consecutive taps/test.log",
  "./✓ StressTests should handle tap during busy bridge (one way)",
  "./✓ StressTests should handle tap during busy bridge (one way)/afterEach.png",
  "./✓ StressTests should handle tap during busy bridge (one way)/beforeEach.png",
  "./✓ StressTests should handle tap during busy bridge (one way)/test.log",
  "./✓ StressTests should handle tap during busy bridge (setState)",
  "./✓ StressTests should handle tap during busy bridge (setState)/afterEach.png",
  "./✓ StressTests should handle tap during busy bridge (setState)/beforeEach.png",
  "./✓ StressTests should handle tap during busy bridge (setState)/test.log",
  "./✓ StressTests should handle tap during busy bridge (two way)",
  "./✓ StressTests should handle tap during busy bridge (two way)/afterEach.png",
  "./✓ StressTests should handle tap during busy bridge (two way)/beforeEach.png",
  "./✓ StressTests should handle tap during busy bridge (two way)/test.log",
  "./✓ StressTests should handle tap during busy JS event loop",
  "./✓ StressTests should handle tap during busy JS event loop/afterEach.png",
  "./✓ StressTests should handle tap during busy JS event loop/beforeEach.png",
  "./✓ StressTests should handle tap during busy JS event loop/test.log",
  "./✓ WaitFor should find element by scrolling until it is visible",
  "./✓ WaitFor should find element by scrolling until it is visible/afterEach.png",
  "./✓ WaitFor should find element by scrolling until it is visible/beforeEach.png",
  "./✓ WaitFor should find element by scrolling until it is visible/test.log",
  "./✓ WaitFor should wait until an element is created and exists in layout",
  "./✓ WaitFor should wait until an element is created and exists in layout/afterEach.png",
  "./✓ WaitFor should wait until an element is created and exists in layout/beforeEach.png",
  "./✓ WaitFor should wait until an element is created and exists in layout/test.log",
  "./✓ WaitFor should wait until an element is removed",
  "./✓ WaitFor should wait until an element is removed/afterEach.png",
  "./✓ WaitFor should wait until an element is removed/beforeEach.png",
  "./✓ WaitFor should wait until an element is removed/test.log",
  "",
]
`;
